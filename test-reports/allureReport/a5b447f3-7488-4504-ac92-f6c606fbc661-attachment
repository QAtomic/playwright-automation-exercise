# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify Cart Quantity
- Location: C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartSerialTests.spec.ts:11:1

# Error details

```
Error: page.goto: net::ERR_NAME_NOT_RESOLVED at https://view_cart/
Call log:
  - navigating to "https://view_cart/", waiting until "load"

    at CartPage.removeAllItemsFromCart (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:37:25)
    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartSerialTests.spec.ts:29:20
```

# Test source

```ts
   1 | import { test, expect, Locator, Page, TestInfo } from '@playwright/test';
   2 |
   3 |
   4 | export class CartPage {
   5 |     url = "/view_cart";
   6 |     page: Page;
   7 |     testInfo: TestInfo;
   8 |
   9 |     proceedToCheckoutButton: Locator;
  10 |
  11 |     constructor(page: Page, testInfo: TestInfo) {
  12 |         this.page = page;
  13 |         this.testInfo = testInfo;
  14 |
  15 |         this.proceedToCheckoutButton = this.page.getByText('Proceed To Checkout');
  16 |     }
  17 |
  18 |
  19 |     async verifyFirstProductIsDisplayedInCart() {
  20 |         await test.step('Verify Product Is Displayed In Cart', async () => {
  21 |             await expect(this.page.getByRole('table').getByRole('row').nth(1).getByRole('link', { name: 'Product Image' })).toBeVisible({ timeout: 20000 });
  22 |         });
  23 |     };
  24 |
  25 |     async clickProceedToCheckoutButton() {
  26 |         await this.proceedToCheckoutButton.click();
  27 |     }
  28 |
  29 |     async verifyFirstProductQuantity(num: number) {
  30 |         await test.step('Verify First Product Quantity = ' + num, async () => {
  31 |             let cartQuantity = await this.page.getByRole('table').getByRole('row').nth(1).locator('td.cart_quantity').innerText();
  32 |             expect(parseInt(cartQuantity)).toBe(num);
  33 |         });
  34 |     };
  35 |     
  36 |     async removeAllItemsFromCart() {
> 37 |         await this.page.goto('/' + this.url);
     |                         ^ Error: page.goto: net::ERR_NAME_NOT_RESOLVED at https://view_cart/
  38 |         const removeItemButtons = await this.page.getByRole('cell', { name: 'ÔÄç' }).locator('a').all();
  39 |         for (const removeItemButton of removeItemButtons) {
  40 |             await removeItemButton.click();
  41 |         }
  42 |     }
  43 |
  44 | }
```