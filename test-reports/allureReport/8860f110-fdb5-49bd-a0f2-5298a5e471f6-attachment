# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: TestTry
- Location: C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\serialTests\serialTestMasters\cartSerialTests.spec.ts:18:1

# Error details

```
Error: Playwright Test did not expect test() to be called here.
Most common reasons include:
- You are calling test() in a configuration file.
- You are calling test() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
    at testTry (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartPageTests.spec.ts:16:9)
    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\serialTests\serialTestMasters\cartSerialTests.spec.ts:19:11
```

# Test source

```ts
   1 | import { test } from "@playwright/test";
   2 | import { 
   3 |     asAnAuthenticatedUserOnCartPageWithProductsInCart 
   4 | } from '../fixtures/cartPageFixtures';
   5 | import { CartPage } from "../pages/cartPage";
   6 |
   7 |
   8 |
   9 | //test.describe.configure({ mode: 'default' });
  10 |
  11 | export async function testTry(t: typeof test) {
  12 |
  13 |
  14 |     //t.describe("Cart Page Tests", () => {
  15 |
> 16 |         asAnAuthenticatedUserOnCartPageWithProductsInCart('Product In Cart', async ({ cartPage }) => {
     |         ^ Error: Playwright Test did not expect test() to be called here.
  17 |             await test.step('As An Authenticated User On Cart Page with Products In Cart', () => true);
  18 |             await cartPage.verifyFirstProductIsDisplayedInCart();
  19 |         });
  20 |     
  21 |         asAnAuthenticatedUserOnCartPageWithProductsInCart('Verify Cart Quantity', async ({ cartPage }) => {
  22 |             await test.step('As An Authenticated User On Cart Page with Products In Cart', () => true);
  23 |             await cartPage.verifyFirstProductQuantity(1);
  24 |         });
  25 |     
  26 |         t.afterEach( async ({ page }) => {
  27 |             let cartPage = new CartPage(page);
  28 |             await cartPage.removeAllItemsFromCart();
  29 |             await page.waitForTimeout(1000);
  30 |         });
  31 |     
  32 |         
  33 |     //});
  34 |
  35 | }
  36 |
  37 |
```