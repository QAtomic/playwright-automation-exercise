# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Cart Page Tests >> Product In Cart
- Location: C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartPageTests.spec.ts:11:9

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toBeVisible()

Locator: locator('#product-1')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for locator('#product-1')
    - waiting for" https://www.automationexercise.com/" navigation to finish...
    - navigated to "https://www.automationexercise.com/"
    - waiting for" https://www.automationexercise.com/login" navigation to finish...
    - navigated to "https://www.automationexercise.com/"

    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:18:59
    at CartPage.verifyFirstProductIsDisplayedInCart (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:17:20)
    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartPageTests.spec.ts:18:28
```

# Page snapshot

```yaml
- banner:
  - link "Website for automation practice":
    - img "Website for automation practice"
  - list:
    - listitem:
      - link " Home"
    - listitem:
      - link " Products"
    - listitem:
      - link " Cart"
    - listitem:
      - link " Logout"
    - listitem:
      - link " Delete Account"
    - listitem:
      - link " Test Cases"
    - listitem:
      - link " API Testing"
    - listitem:
      - link " Video Tutorials"
    - listitem:
      - link " Contact us"
    - listitem:  Logged in as QA Test
- list:
  - listitem:
    - link "Home"
  - listitem: Shopping Cart
- paragraph:
  - text: Cart is empty! Click
  - link "here"
  - text: to buy products.
- contentinfo:
  - heading "Subscription" [level=2]
  - textbox "Your email address"
  - button ""
  - paragraph: Get the most recent updates from our site and be updated your self...
  - paragraph: Copyright © 2021 All rights reserved
- insertion
```

# Test source

```ts
   1 | import { test, expect, Locator, Page } from '@playwright/test';
   2 |
   3 |
   4 | export class CartPage {
   5 |     url = "https://www.automationexercise.com/view_cart";
   6 |     page: Page;
   7 |
   8 |     proceedToCheckoutButton: Locator;
   9 |
  10 |     constructor(page: Page) {
  11 |         this.page = page;
  12 |         this.proceedToCheckoutButton = this.page.getByText('Proceed To Checkout');
  13 |     }
  14 |
  15 |
  16 |     async verifyFirstProductIsDisplayedInCart() {
  17 |         await test.step('Verify Product Is Displayed In Cart', async () => {
> 18 |             await expect(this.page.locator('#product-1')).toBeVisible();
     |                                                           ^ Error: Timed out 5000ms waiting for expect(locator).toBeVisible()
  19 |         });
  20 |     };
  21 |
  22 |     async clickProceedToCheckoutButton() {
  23 |         await this.proceedToCheckoutButton.click();
  24 |     }
  25 |
  26 |     async verifyFirstProductQuantity(num: number) {
  27 |         await test.step('Verify First Product Quantity = ' + num, async () => {
  28 |             let cartQuantity = await this.page.locator('#product-1').locator('.cart_quantity').innerText();
  29 |             expect(parseInt(cartQuantity)).toBe(num);
  30 |         });
  31 |     };
  32 |     
  33 |     async removeAllItemsFromCart() {
  34 |         await this.page.goto(this.url);
  35 |         const removeItemButtons = await this.page.getByRole('cell', { name: '' }).locator('a').all();
  36 |         for (const removeItemButton of removeItemButtons) {
  37 |             await removeItemButton.click();
  38 |         }
  39 |     }
  40 |
  41 | }
```