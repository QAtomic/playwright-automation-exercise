# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify Sleeveless Dress in Cart
- Location: C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartSerialTests.spec.ts:18:5

# Error details

```
Error: expect(received).toBe(expected) // Object.is equality

Expected: 1
Received: 4
    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:32:44
    at CartPage.verifyFirstProductQuantity (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:30:9)
    at verifyProductInCart (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\serialTests\cartTests.ts:30:5)
    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartSerialTests.spec.ts:19:5
```

# Page snapshot

```yaml
- banner:
  - link "Website for automation practice":
    - img "Website for automation practice"
  - list:
    - listitem:
      - link " Home"
    - listitem:
      - link " Products"
    - listitem:
      - link " Cart"
    - listitem:
      - link " Logout"
    - listitem:
      - link " Delete Account"
    - listitem:
      - link " Test Cases"
    - listitem:
      - link " API Testing"
    - listitem:
      - link " Video Tutorials"
    - listitem:
      - link " Contact us"
    - listitem:  Logged in as QA Test
- list:
  - listitem:
    - link "Home"
  - listitem: Shopping Cart
- text: Proceed To Checkout
- table:
  - rowgroup:
    - row "Item Description Price Quantity Total":
      - cell "Item"
      - cell "Description"
      - cell "Price"
      - cell "Quantity"
      - cell "Total"
      - cell
  - rowgroup:
    - row "Product Image Blue Top Women > Tops Rs. 500 4 Rs. 2000 ":
      - cell "Product Image":
        - link "Product Image":
          - img "Product Image"
      - cell "Blue Top Women > Tops":
        - heading "Blue Top" [level=4]:
          - link "Blue Top"
        - paragraph: Women > Tops
      - cell "Rs. 500":
        - paragraph: Rs. 500
      - cell "4":
        - button "4"
      - cell "Rs. 2000":
        - paragraph: Rs. 2000
      - cell ""
    - row "Product Image Men Tshirt Men > Tshirts Rs. 400 1 Rs. 400 ":
      - cell "Product Image":
        - link "Product Image":
          - img "Product Image"
      - cell "Men Tshirt Men > Tshirts":
        - heading "Men Tshirt" [level=4]:
          - link "Men Tshirt"
        - paragraph: Men > Tshirts
      - cell "Rs. 400":
        - paragraph: Rs. 400
      - cell "1":
        - button "1"
      - cell "Rs. 400":
        - paragraph: Rs. 400
      - cell ""
    - row "Product Image Sleeveless Dress Women > Dress Rs. 1000 1 Rs. 1000 ":
      - cell "Product Image":
        - link "Product Image":
          - img "Product Image"
      - cell "Sleeveless Dress Women > Dress":
        - heading "Sleeveless Dress" [level=4]:
          - link "Sleeveless Dress"
        - paragraph: Women > Dress
      - cell "Rs. 1000":
        - paragraph: Rs. 1000
      - cell "1":
        - button "1"
      - cell "Rs. 1000":
        - paragraph: Rs. 1000
      - cell ""
- contentinfo:
  - heading "Subscription" [level=2]
  - textbox "Your email address"
  - button ""
  - paragraph: Get the most recent updates from our site and be updated your self...
  - paragraph: Copyright © 2021 All rights reserved
- insertion
```

# Test source

```ts
   1 | import { test, expect, Locator, Page, TestInfo } from '@playwright/test';
   2 |
   3 |
   4 | export class CartPage {
   5 |     url = "/view_cart";
   6 |     page: Page;
   7 |     testInfo: TestInfo;
   8 |
   9 |     proceedToCheckoutButton: Locator;
  10 |
  11 |     constructor(page: Page, testInfo: TestInfo) {
  12 |         this.page = page;
  13 |         this.testInfo = testInfo;
  14 |
  15 |         this.proceedToCheckoutButton = this.page.getByText('Proceed To Checkout');
  16 |     }
  17 |
  18 |
  19 |     async verifyFirstProductIsDisplayedInCart() {
  20 |         await test.step('Verify Product Is Displayed In Cart', async () => {
  21 |             await expect(this.page.getByRole('table').getByRole('row').nth(1).getByRole('link', { name: 'Product Image' })).toBeVisible({ timeout: 20000 });
  22 |         });
  23 |     };
  24 |
  25 |     async clickProceedToCheckoutButton() {
  26 |         await this.proceedToCheckoutButton.click();
  27 |     }
  28 |
  29 |     async verifyFirstProductQuantity(num: number) {
  30 |         await test.step('Verify First Product Quantity = ' + num, async () => {
  31 |             let cartQuantity = await this.page.getByRole('table').getByRole('row').nth(1).locator('td.cart_quantity').innerText();
> 32 |             expect(parseInt(cartQuantity)).toBe(num);
     |                                            ^ Error: expect(received).toBe(expected) // Object.is equality
  33 |         });
  34 |     };
  35 |     
  36 |     async removeAllItemsFromCart() {
  37 |         await this.page.goto(this.testInfo.project.use.baseURL + this.url);
  38 |         const removeItemButtons = await this.page.getByRole('cell', { name: '' }).locator('a').all();
  39 |         for (const removeItemButton of removeItemButtons) {
  40 |             await removeItemButton.click();
  41 |         }
  42 |     }
  43 |
  44 | }
```