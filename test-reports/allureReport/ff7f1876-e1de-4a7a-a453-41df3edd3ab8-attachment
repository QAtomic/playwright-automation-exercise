# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify Men Tshirt in Cart
- Location: C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartSerialTests.spec.ts:18:5

# Error details

```
Error: locator.innerText: Test timeout of 15000ms exceeded.
Call log:
  - waiting for getByRole('table').getByRole('row').nth(1).locator('td.cart_quantity')

    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:33:119
    at CartPage.verifyFirstProductQuantity (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\pages\cartPage.ts:32:20)
    at verifyProductInCart (C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\serialTests\cartTests.ts:30:20)
    at C:\Users\Drew\Documents\VScode-workspace\playwright-automation-exercise\test\ui\tests\cartSerialTests.spec.ts:19:5
```

# Page snapshot

```yaml
- banner:
  - link "Website for automation practice":
    - img "Website for automation practice"
  - list:
    - listitem:
      - link " Home"
    - listitem:
      - link " Products"
    - listitem:
      - link " Cart"
    - listitem:
      - link " Logout"
    - listitem:
      - link " Delete Account"
    - listitem:
      - link " Test Cases"
    - listitem:
      - link " API Testing"
    - listitem:
      - link " Video Tutorials"
    - listitem:
      - link " Contact us"
    - listitem:  Logged in as QA FF
- list:
  - listitem:
    - link "Home"
  - listitem: Shopping Cart
- paragraph:
  - text: Cart is empty! Click
  - link "here"
  - text: to buy products.
- contentinfo:
  - heading "Subscription" [level=2]
  - textbox "Your email address"
  - button ""
  - paragraph: Get the most recent updates from our site and be updated your self...
  - paragraph: Copyright © 2021 All rights reserved
- insertion
```

# Test source

```ts
   1 | import { test, expect, Locator, Page, TestInfo } from '@playwright/test';
   2 | import * as dotenv from 'dotenv';
   3 | import { BasePage } from '../basePage/basePage';
   4 | dotenv.config();
   5 |
   6 |
   7 | export class CartPage extends BasePage {
   8 |     url = "/view_cart";
   9 |
  10 |     proceedToCheckoutButton: Locator;
  11 |
  12 |     constructor(page: Page, testInfo: TestInfo) {
  13 |         super(page, testInfo);
  14 |
  15 |         this.proceedToCheckoutButton = this.page.getByText('Proceed To Checkout');
  16 |     }
  17 |
  18 |
  19 |     async verifyFirstProductIsDisplayedInCart() {
  20 |         await test.step('Verify Product Is Displayed In Cart', async () => {
  21 |             await expect(this.page.getByRole('table').getByRole('row').nth(1).getByRole('link', { name: 'Product Image' })).toBeVisible({ timeout: 20000 });
  22 |         });
  23 |     };
  24 |
  25 |     async clickProceedToCheckoutButton() {
  26 |         await test.step('Click Proceed To Checkout Button', async () => {
  27 |             await this.proceedToCheckoutButton.click();
  28 |         });
  29 |     }
  30 |
  31 |     async verifyFirstProductQuantity(num: number) {
  32 |         await test.step('Verify First Product Quantity = ' + num, async () => {
> 33 |             let cartQuantity = await this.page.getByRole('table').getByRole('row').nth(1).locator('td.cart_quantity').innerText();
     |                                                                                                                       ^ Error: locator.innerText: Test timeout of 15000ms exceeded.
  34 |             expect(parseInt(cartQuantity)).toBe(num);
  35 |         });
  36 |     };
  37 |     
  38 |     async removeAllItemsFromCart() {
  39 |         await test.step('Remove All Items From Cart', async () => {
  40 |             await this.page.goto(this.url);
  41 |             const removeItemButtons = await this.page.getByRole('cell', { name: '' }).locator('a').all();
  42 |             for (const removeItemButton of removeItemButtons) {
  43 |                 await removeItemButton.click();
  44 |             }
  45 |         });
  46 |     }
  47 |
  48 | }
```